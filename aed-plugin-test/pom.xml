<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>parent</artifactId>
		<groupId>net.sf.mardao</groupId>
		<version>1.16</version>
	</parent>

	<!-- The Basics -->
	<groupId>net.sf.mardao</groupId>
	<artifactId>aed-plugin-test</artifactId>
	<version>1.16</version>
	<packaging>war</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>Basic test of mardao for Google AppEngine</description>

	<pluginRepositories>
		<pluginRepository>
			<id>maven-gae-plugin-repo</id>
			<name>Maven Google App Engine Repository</name>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>mardao-api</artifactId>
			<version>${project.version}</version>
		</dependency>	
	
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- Make use of JSP tags. Remove, if you don't use JSPs -->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>3.0.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.0.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.7.2</version>
		</dependency>

		<!-- Google App Engine meta-package <dependency> <groupId>net.kindleit</groupId> 
			<artifactId>gae-runtime</artifactId> <version>${gae.version}</version> <type>pom</type> 
			</dependency> -->

		<!-- +- com.google.appengine:appengine-api-1.0-sdk:jar:1.3.7:compile [INFO] 
			| +- org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar:1.1.1:runtime [INFO] 
			| +- com.google.appengine.orm:jdo2-api:jar:2.3-eb:runtime [INFO] | +- com.google.appengine.orm:datanucleus-core:jar:1.1.5:compile 
			[INFO] | +- com.google.appengine.orm:datanucleus-appengine:jar:1.0.7:runtime 
			[INFO] | +- com.google.appengine.orm:datanucleus-jpa:jar:1.1.5:runtime [INFO] 
			| \- com.google.appengine:appengine-tools-sdk:jar:1.3.7:compile -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-tools-sdk</artifactId>
			<version>${gae.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jpa_3.0_spec</artifactId>
			<version>1.1.1</version>
			<!-- For javax.persistence annotations
			 <scope>provided</scope>
			 -->
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jta_1.1_spec</artifactId>
			<version>1.1.1</version>
			 <scope>runtime</scope>
		</dependency>

		<!-- These dependencies are here just for enabling logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.6.1</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<testSourceDirectory>${project.basedir}/src/itest/java</testSourceDirectory>
		<plugins>
			<!-- two phases: to generate generics (in generate-sources), then generate 
				daos (in process-sources) -->
			<plugin>
				<groupId>net.sf.mardao</groupId>
				<artifactId>maven-mardao-plugin</artifactId>
				<version>${project.version}</version>
				<executions>
					<execution>
						<id>generate-generics</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate-sources</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-daos</id>
						<phase>process-sources</phase>
						<goals>
							<goal>process-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-web</id>
						<phase>process-sources</phase>
						<goals>
							<goal>process-classes</goal>
						</goals>
						<configuration>
							<!-- 
							<basePackage>net.sf.mardao.test.aed</basePackage>
							 -->
							<persistenceType>WEB</persistenceType>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<!-- Templates are retreived from plugin jar by default: <templateFolder>C:/workspaces/Misc/eclipse/Scanner/src/main/resources</templateFolder> -->
					<basePackage>net.sf.mardao.test.aed</basePackage>
					<persistenceType>AED</persistenceType>
					<!-- Scan here for entity classes: <classpathElement>target/entity-classes</classpathElement> -->
					<!-- <additionalClasspathElements> <param>c:/develop</param> <param>h:/</param> 
						</additionalClasspathElements> -->
					<!-- Override default ${basePackage}.domain <domanBasePackage></domanBasePackage> -->
					<!-- Override default ${basePackage}.dao <daoBasePackage></daoBasePackage> -->
					<!-- default is transactions-optional: <persistenceUnitName>JpaPU2</persistenceUnitName> -->
					<!-- default is true: -->
					<containerManagedEntityManager>false</containerManagedEntityManager>
					<containerManagedTransactionManager>false</containerManagedTransactionManager>

					<!-- default is null -->
					<!-- <sourceVersion>1.5</sourceVersion> -->
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
				<executions>
					<!-- extra compile step of domain classes before generator processing -->
					<execution>
						<id>compile-entities</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<verbose>false</verbose>
							<fork>true</fork>
							<includes>
								<include>**/domain/*.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/target/generated-sources/dao</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/appengine-web.xml</include>
							</includes>
						</resource>
						<resource>
							<directory>target/generated-resources/web</directory>
							<filtering>false</filtering>
							<includes>
								<include>WEB-INF/jsp/**/*</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn 
				gae:deploy" to upload to GAE. -->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.7.2</version>
				<configuration>
					<port>8282</port>
					<monitorPort>8287</monitorPort>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.kindleit</groupId>
						<artifactId>gae-runtime</artifactId>
						<version>${gae.version}</version>
						<type>pom</type>
					</dependency>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-jdk14</artifactId>
						<version>1.6.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>start-gae</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-gae</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.6</version>
				<configuration>
                    <forkMode>pertest</forkMode>
                    <argLine>-Xms256m -Xmx512m</argLine>
                    <testFailureIgnore>false</testFailureIgnore>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>surefire-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>

					<execution>
						<id>surefire-itest</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			

			<!-- Upload application to the appspot automatically, during release:perform -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- Specify hard-coded project properties here -->
	<properties>
		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>false</downloadSources>

		<!-- Specify AppEngine version for your project. It should match SDK version 
			pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
		<gae.version>1.5.2</gae.version>

		<!-- Upload to http://test.latest.<applicationName>.appspot.com by default -->
		<gae.application.version>test</gae.application.version>
	</properties>

	<profiles>
		<!-- We can configure our integration server to activate this profile and 
			perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com 
			automatically -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload 
			application to the http://2.latest.<applicationName>.appspot.com (We might 
			want to set the 2nd version as our applications Default version to be accessible 
			at http://<applicationName>.appspot.com) -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to 
					2 -->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project>

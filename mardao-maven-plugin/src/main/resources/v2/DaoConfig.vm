package ${daoBasePackage};

import java.util.HashMap;
import java.util.Map;
import net.sf.mardao.core.dao.DaoImpl;
#foreach( $group in $packages.values() )
#foreach(  $entity in $helper.getEntitiesResolved($group.entities) )
import ${domainBasePackage}.${entity.simpleName};
#end
#end

/**
 * Context to define the Dao beans.
 * This file is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on ${currentDate}.
 * @author mardao DAO generator (${helper.class.name})
 */
public class DaoConfig {

    public static Map<Class, DaoImpl> createDaos() {
        final HashMap<Class, DaoImpl> map = new HashMap<Class, DaoImpl>();

#foreach( $group in $packages.values() )
        // first, create and map Dao instances:
#foreach(  $entity in $helper.getEntitiesResolved($group.entities) )
        final ${entity.simpleName}DaoBean ${entity.simpleLower}Dao =
            new ${entity.simpleName}DaoBean();
        map.put(${entity.simpleName}.class, ${entity.simpleLower}Dao);
#end

        // next, wire parents;
#foreach(  $entity in $helper.getEntitiesResolved($group.entities) )
#if( $entity.parent )
        ${entity.simpleLower}Dao.setMardaoParentDao(${entity.parent.entity.simpleLower}Dao);
#end
#end

        // finally, wire many-to-ones;
#foreach(  $entity in $helper.getEntitiesResolved($group.entities) )
#foreach( $field in $entity.manyToOnes )
        ${entity.simpleLower}Dao.set${field.nameFirst}Dao(${field.entity.simpleLower}Dao);
#end	
#end
	
#end
        return map;
    }
}